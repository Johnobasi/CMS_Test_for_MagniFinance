// <auto-generated />
using System;
using CMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CMS.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210203051153_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("CMS.Data.Core.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("CMS.Data.Core.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("FirstMidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StudentGrades")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.HasIndex("SubjectId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CMS.Data.Core.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("CMS.Data.Core.Teacher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("FirstMidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Grades")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.HasIndex("SubjectId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("CMS.Data.Core.Student", b =>
                {
                    b.HasOne("CMS.Data.Core.Course", "Course")
                        .WithMany("CourseStudent")
                        .HasForeignKey("CourseID");

                    b.HasOne("CMS.Data.Core.Subject", null)
                        .WithMany("SubjectStudent")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("CMS.Data.Core.Teacher", b =>
                {
                    b.HasOne("CMS.Data.Core.Course", "Course")
                        .WithMany("CourseTeacher")
                        .HasForeignKey("CourseID");

                    b.HasOne("CMS.Data.Core.Subject", "Subject")
                        .WithMany("SubjectTeacher")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Course");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("CMS.Data.Core.Course", b =>
                {
                    b.Navigation("CourseStudent");

                    b.Navigation("CourseTeacher");
                });

            modelBuilder.Entity("CMS.Data.Core.Subject", b =>
                {
                    b.Navigation("SubjectStudent");

                    b.Navigation("SubjectTeacher");
                });
#pragma warning restore 612, 618
        }
    }
}
